# Generated by Django 3.0.5 on 2020-08-10 14:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountDocuments',
            fields=[
                ('activity_certificate_pdf', models.FilePathField(db_column='ACTIVITY_CERTIFICATE_PATH', verbose_name='FAALIYET BELGESI')),
                ('tax_return_pdf', models.FilePathField(db_column='TAX_RETURN_PATH', verbose_name='VERGI BEYANNAMESI')),
                ('authorized_signatures_list_pdf', models.FilePathField(db_column='AUTHORIZED_SIG_LIST', verbose_name='IMZA SIRKULERI')),
                ('attachment_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ACCOUNT_DOCUMENTS',
            },
        ),
        migrations.CreateModel(
            name='CheckAccount',
            fields=[
                ('firm_type', models.CharField(choices=[('t', 'TUZEL_KISILIK'), ('s', 'SAHIS_ISLETMESI')], db_column='FIRM_TYPE', help_text='Business type of the firm', max_length=50, verbose_name='FIRM TYPE')),
                ('firm_full_name', models.CharField(db_column='FIRM_FULLNAME', max_length=70, verbose_name='FIRM FULLNAME')),
                ('taxpayer_number', models.PositiveIntegerField(db_column='TAXPAYER_NUMBER', help_text='Sahis firmasi ise TCKNO, Tuzel Kisilik iseVergi No', unique=True)),
                ('tax_department', models.CharField(db_column='TAX_DEPARTMENT', max_length=100, verbose_name='TAX DEPARTMENT')),
                ('firm_address', models.CharField(db_column='FIRM_ADDRESS', max_length=200, verbose_name='FIRM ADDRESS')),
                ('firm_key_contact_personnel', models.CharField(db_column='FIRM_KEY_PERSON', max_length=70, verbose_name='FIRMA YETKILI KISISI')),
                ('phone_number', models.CharField(db_column='PHONE_NUMBER', max_length=15, unique=True)),
                ('fax', models.CharField(db_column='FAX_NUMBER', max_length=15, unique=True)),
                ('web_url', models.URLField(db_column='WEB_URL')),
                ('email_addr', models.EmailField(db_column='EMAIL_ADDR', max_length=254, unique=True)),
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'CARI_HESAP',
            },
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(db_column='CITY_NAME', max_length=50, unique=True)),
                ('city_plate_number', models.PositiveSmallIntegerField(db_column='CITY_PLATE_NUMBER', db_index=True, unique=True)),
            ],
            options={
                'db_table': 'CITIES',
            },
        ),
        migrations.CreateModel(
            name='Districts',
            fields=[
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
                ('district_name', models.CharField(db_column='DISTRICT_NAME', max_length=50)),
            ],
            options={
                'db_table': 'DISTRICTS',
            },
        ),
        migrations.CreateModel(
            name='PartnershipDocuments',
            fields=[
                ('partnership_structure_identity_copies', models.FilePathField(allow_folders=True, db_column='PARTNERSHIP_STRUCTURE_PATH', verbose_name='ORTAKLIK YAPISI VE KIMLIK KOPYALARI')),
                ('identity_copies', models.FilePathField(allow_folders=True, db_column='IDENTITY_COPIES_PATH', verbose_name='KIMLIK KOPYALARI')),
                ('board_management', models.FilePathField(allow_folders=True, db_column='BOARD_MANAGEMENT_PATH', verbose_name='YONETIM KURULU YAPISI')),
                ('attachment_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'PARTNERSHIP_DOCUMENTS',
            },
        ),
        migrations.CreateModel(
            name='Sectors',
            fields=[
                ('name', models.CharField(db_column='SECTOR_NAME', max_length=50, unique=True)),
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'SECTORS',
            },
        ),
        migrations.CreateModel(
            name='SysDepartments',
            fields=[
                ('department_name', models.CharField(db_column='DEPARTMENT_NAME', max_length=50, unique=True)),
                ('objectid', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'SYS_DEPARTMENTS',
            },
        ),
        migrations.CreateModel(
            name='SysPersonnel',
            fields=[
                ('firstname', models.CharField(db_column='FIRSTNAME', max_length=50)),
                ('surname', models.CharField(db_column='SURNAME', max_length=50)),
                ('username', models.CharField(db_column='USERNAME', max_length=50)),
                ('position', models.CharField(db_column='POSITION', max_length=50)),
                ('personnel_id', models.AutoField(primary_key=True, serialize=False)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkaccount.SysDepartments')),
            ],
            options={
                'db_table': 'SYS_PERSONNEL',
            },
        ),
        migrations.AddIndex(
            model_name='sysdepartments',
            index=models.Index(fields=['department_name', 'objectid'], name='SYS_DEPARTM_DEPARTM_93606f_idx'),
        ),
        migrations.AddField(
            model_name='partnershipdocuments',
            name='customer_id',
            field=models.ForeignKey(db_column='CUSTOMER_ID', on_delete=django.db.models.deletion.CASCADE, to='checkaccount.CheckAccount'),
        ),
        migrations.AddField(
            model_name='districts',
            name='related_city_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkaccount.Cities'),
        ),
        migrations.AddIndex(
            model_name='cities',
            index=models.Index(fields=['city_name'], name='CITIES_CITY_NA_76a6b2_idx'),
        ),
        migrations.AddField(
            model_name='checkaccount',
            name='birthplace',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='birthplace', to='checkaccount.Cities'),
        ),
        migrations.AddField(
            model_name='checkaccount',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='checkaccount.Cities'),
        ),
        migrations.AddField(
            model_name='checkaccount',
            name='district',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='checkaccount.Districts'),
        ),
        migrations.AddField(
            model_name='checkaccount',
            name='representative_person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='checkaccount.SysPersonnel'),
        ),
        migrations.AddField(
            model_name='checkaccount',
            name='sector',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='checkaccount.Sectors'),
        ),
        migrations.AddField(
            model_name='accountdocuments',
            name='customer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='checkaccount.CheckAccount'),
        ),
        migrations.AddIndex(
            model_name='syspersonnel',
            index=models.Index(fields=['firstname', 'personnel_id', 'department'], name='SYS_PERSONN_FIRSTNA_2fabac_idx'),
        ),
        migrations.AddIndex(
            model_name='syspersonnel',
            index=models.Index(fields=['personnel_id', 'firstname', 'surname'], name='SYS_PERSONN_personn_505fd7_idx'),
        ),
        migrations.AddIndex(
            model_name='partnershipdocuments',
            index=models.Index(fields=['attachment_id', 'customer_id'], name='PARTNERSHIP_attachm_18f880_idx'),
        ),
        migrations.AddIndex(
            model_name='districts',
            index=models.Index(fields=['objectid', 'district_name'], name='DISTRICTS_objecti_cbe962_idx'),
        ),
        migrations.AddIndex(
            model_name='checkaccount',
            index=models.Index(fields=['city', 'district', 'customer_id'], name='CARI_HESAP_city_id_e343c5_idx'),
        ),
        migrations.AddIndex(
            model_name='checkaccount',
            index=models.Index(fields=['firm_type', 'firm_full_name', 'customer_id'], name='CARI_HESAP_FIRM_TY_4c9954_idx'),
        ),
        migrations.AddIndex(
            model_name='checkaccount',
            index=models.Index(fields=['customer_id', 'representative_person', 'firm_key_contact_personnel', 'birthplace'], name='CARI_HESAP_custome_b5ed7d_idx'),
        ),
        migrations.AddIndex(
            model_name='accountdocuments',
            index=models.Index(fields=['attachment_id', 'customer_id'], name='ACCOUNT_DOC_attachm_18b649_idx'),
        ),
    ]
