# Generated by Django 3.0.1 on 2020-10-18 10:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('checkaccount', '0002_auto_20201018_1357'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseModel',
            fields=[
                ('data_id', models.AutoField(primary_key=True, serialize=False)),
                ('Created Date', models.DateTimeField(auto_now_add=True, db_column='CREATED_DATE')),
                ('Created by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DomainPts',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='risk_analysis.BaseModel')),
                ('domain_names', models.CharField(choices=[('basemodel_ptr', 'basemodel_ptr_id'), ('related_customer', 'related_customer_id'), ('internal_customer_id', 'internal_customer_id'), ('limit', 'limit'), ('warrant_state', 'warrant_state'), ('warrant_amount', 'warrant_amount'), ('maturity', 'maturity'), ('payment_frequency', 'payment_frequency'), ('maturity_exceed_avg', 'maturity_exceed_avg'), ('avg_order_amount_last_twelve_months', 'avg_order_amount_last_twelve_months'), ('avg_order_amount_last_three_months', 'avg_order_amount_last_three_months'), ('last_3_months_aberration', 'last_3_months_aberration'), ('last_month_payback_perc', 'last_month_payback_perc'), ('last_twelve_months_payback_perc', 'last_twelve_months_payback_perc'), ('last_three_months_payback_comparison', 'last_three_months_payback_comparison'), ('avg_last_three_months_payback_perc', 'avg_last_three_months_payback_perc'), ('avg_delay_time', 'avg_delay_time'), ('avg_delay_balance', 'avg_delay_balance'), ('period_day', 'period_day'), ('period_velocity', 'period_velocity'), ('risk_excluded_warrant_balance', 'risk_excluded_warrant_balance'), ('balance', 'balance'), ('profit', 'profit'), ('profit_percent', 'profit_percent'), ('total_risk_including_cheque', 'total_risk_including_cheque'), ('last_12_months_total_endorsement', 'last_12_months_total_endorsement')], db_column='DOMAIN', max_length=100)),
                ('point', models.FloatField(db_column='POINT', default=0.0, help_text='Set your domain point of your variable', max_length=100.0)),
            ],
            bases=('risk_analysis.basemodel',),
        ),
        migrations.CreateModel(
            name='SGKDebtListModel',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='risk_analysis.BaseModel')),
                ('taxpayer_number', models.CharField(db_column='TAXPAYER_NUMBER', help_text='Sahis firmasi ise TCKNO, Tuzel Kisilik iseVergi No', max_length=15)),
                ('firm_title', models.CharField(db_column='FIRM_FULLNAME', max_length=200, verbose_name='FIRM FULLNAME')),
                ('debt_amount', models.PositiveIntegerField(db_column='DEBT_AMOUNT')),
            ],
            options={
                'db_table': 'SGK_DEBTS',
            },
            bases=('risk_analysis.basemodel',),
        ),
        migrations.CreateModel(
            name='TaxDebtList',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='risk_analysis.BaseModel')),
                ('tax_department', models.CharField(db_column='TAX_DEPT', help_text='Vergi Departmanı', max_length=200, verbose_name='TAX DEPARTMENT')),
                ('taxpayer_number', models.CharField(db_column='TAXPAYER_NUMBER', help_text='Sahis firmasi ise TCKNO, Tuzel Kisilik iseVergi No', max_length=15)),
                ('dept_title', models.CharField(db_column='DEPT_TITLE', help_text='Borçlunun Adı Soyadı/Unvanı', max_length=150)),
                ('real_operating_income', models.CharField(db_column='REAL_OPERATING_INCOME', help_text='Esas Faaliyet Konusu', max_length=500)),
                ('dept_amount', models.FloatField(db_column='DEPT_AMOUNT', help_text='Borç Miktarı')),
            ],
            options={
                'db_table': 'TAX_DEBTS',
            },
            bases=('risk_analysis.basemodel',),
        ),
        migrations.CreateModel(
            name='SubtypePoints',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='risk_analysis.BaseModel')),
                ('pts', models.FloatField(db_column='PTS', help_text='Point of specified intervals of your subtype related Domain', max_length=100)),
                ('min_interval', models.FloatField(db_column='MIN_INTERVAL', help_text='Minimum interval')),
                ('max_interval', models.FloatField(db_column='MAX_INTERVAL', help_text='Maximum interval')),
                ('domain_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='domains', to='risk_analysis.DomainPts')),
            ],
            bases=('risk_analysis.basemodel',),
        ),
        migrations.CreateModel(
            name='RiskDataSetPoints',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='risk_analysis.BaseModel')),
                ('internal_customer_id', models.IntegerField(db_column='IC_MUSTERI_ID')),
                ('son_12ay_ortalama_sapma_pts', models.PositiveSmallIntegerField(db_column='SON_SENE_ORT_SAPMA_PTS', null=True)),
                ('kar_pts', models.PositiveSmallIntegerField(db_column='KAR_PTS', null=True)),
                ('iade_pts', models.PositiveSmallIntegerField(db_column='IADE_PTS', null=True)),
                ('ort_gecikme_pts', models.PositiveSmallIntegerField(db_column='ORT_GECIKME_PTS', null=True)),
                ('ort_gecikme_gun_bakiyesi_pts', models.PositiveSmallIntegerField(db_column='ORT_GECIKME_GUN_BAKIYESI_PTS', null=True)),
                ('devir_gunu_pts', models.PositiveSmallIntegerField(db_column='DEVIR_GUNU_PTS', null=True)),
                ('teminatin_limit_riskini_karsilamasi_pts', models.PositiveSmallIntegerField(db_column='TEMINAT_LIMIT_RISK_KARSILASTIRMASI_PTS', null=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='checkaccount.CheckAccount')),
            ],
            options={
                'db_table': 'RISK_DATASET_POINTS',
            },
            bases=('risk_analysis.basemodel',),
        ),
        migrations.CreateModel(
            name='DataSetModel',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='risk_analysis.BaseModel')),
                ('internal_customer_id', models.IntegerField(db_column='INTERNAL_CUSTOMER_ID', help_text='İç Müşteri Numarası', verbose_name='İç Müşteri No')),
                ('limit', models.PositiveIntegerField(db_column='LIMIT', verbose_name='Limit')),
                ('warrant_state', models.BooleanField(db_column='WARRANT_STATE', default=False, help_text='teminat durumu', null=True, verbose_name='Teminat Durumu')),
                ('warrant_amount', models.PositiveIntegerField(db_column='WARRANT_AMOUNT', help_text='teminat tutarı', null=True, verbose_name='Teminat Tutarı')),
                ('maturity', models.IntegerField(db_column='MATURITY', help_text='vade günü', null=True, verbose_name='Vade Günü')),
                ('payment_frequency', models.PositiveSmallIntegerField(db_column='PAYMENT_FREQ', help_text='odeme sikligi', null=True, verbose_name='Ödeme Sıklığı')),
                ('maturity_exceed_avg', models.IntegerField(db_column='MATURITY_EXCEED_AVG', help_text='ortalama gecikme gun bakiyesi', null=True, verbose_name='Ortalama Gecikme Gün Bakiyesi')),
                ('avg_order_amount_last_twelve_months', models.FloatField(db_column='AVG_ORDER_AMOUNT_12', help_text='Son 12 ay ortalama sipariş tutarı', null=True, verbose_name='Son 12 Ay Ortalama Sipariş Tutarı')),
                ('avg_order_amount_last_three_months', models.FloatField(db_column='AVG_ORDER_AMOUNT_3', help_text='Son 3 ay ortalama sipariş tutarı', null=True, verbose_name='Son 3 Ay Ortalama Sipariş Tutarı')),
                ('last_3_months_aberration', models.PositiveSmallIntegerField(db_column='ABERRATION', help_text='Son 3 ay ile son 11 aylık satış ortalamasından sapma', null=True, verbose_name='Son 3 ay ile son 11 aylık Satış ortalamasından sapma')),
                ('last_month_payback_perc', models.PositiveSmallIntegerField(db_column='PAYBACK_PERC_LAST', help_text='Son ay iade yuzdesi', null=True, verbose_name='Son ay iade yüzdesi')),
                ('last_twelve_months_payback_perc', models.FloatField(db_column='PAYBACK_PERC_12', help_text='Son 12 ay iade yüzdesi', null=True, verbose_name='Son 12 ay iade yüzdesi')),
                ('last_three_months_payback_comparison', models.SmallIntegerField(db_column='LAST_THREE_PAYBACK_COMP', help_text='Son 3 ay ile son 11 aylık iade %si karşılaştırması', null=True, verbose_name='Son 3 ay ile son 11 aylık iade yüzdesi karşılaştırması')),
                ('avg_last_three_months_payback_perc', models.PositiveSmallIntegerField(db_column='AVG_PAYBACK_PERC_3', help_text='Son 3 ay iade yuzdesi', null=True, verbose_name='Son 3 ay iade yüzdesi')),
                ('avg_delay_time', models.SmallIntegerField(db_column='AVG_DELAY_TIME', help_text='Ort gecikme gun sayisi', null=True, verbose_name='Ortalama gecikme gün sayısı')),
                ('avg_delay_balance', models.PositiveIntegerField(db_column='AVG_DELAY_BALANCE', help_text='Ortalama gecikme gun bakiyesi', null=True, verbose_name='Ortalama gecikme gün bakiyesi')),
                ('period_day', models.PositiveIntegerField(db_column='PERIOD_DAY', help_text='Devir gunu', null=True, verbose_name='Devir günü')),
                ('period_velocity', models.FloatField(db_column='PERIOD_VEL', help_text='Devir hizi', null=True, verbose_name='Devir hızı')),
                ('risk_excluded_warrant_balance', models.IntegerField(db_column='RISK_DIF_WARRANT_BALANCE', help_text='Teminat harici bakiye - risk', null=True, verbose_name='Teminat harici bakiye - risk')),
                ('balance', models.PositiveIntegerField(db_column='BALANCE', help_text='Bakiye', null=True, verbose_name='Bakiye')),
                ('profit', models.PositiveIntegerField(db_column='PROFIT', help_text='Kar', null=True, verbose_name='Kar')),
                ('profit_percent', models.FloatField(db_column='PERC_PROFIT', help_text='Kar yuzdesi', null=True, verbose_name='Kar yüzdesi')),
                ('total_risk_including_cheque', models.IntegerField(db_column='TOTAL_RISK_CHEQUE', help_text='Çek dahil toplam risk', null=True, verbose_name='Çek dahil toplam risk')),
                ('last_12_months_total_endorsement', models.PositiveIntegerField(db_column='LAST_12_TOTAL_ENDORSEMENT', help_text='Son 12 aylık toplam ciro', null=True, verbose_name='Son 12 aylık toplam ciro')),
                ('related_customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='checkaccount.CheckAccount', verbose_name='İlişkili Müşteri')),
            ],
            options={
                'db_table': 'RISK_DATA',
            },
            bases=('risk_analysis.basemodel',),
        ),
    ]
